using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'biggerIsGreater' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING w as parameter.
     */

    public static string biggerIsGreater(string w)
    {
        char[] letters = w.ToCharArray();
        int i = letters.Length - 2;

        while (i >= 0 && letters[i] >= letters[i + 1])
        {
            i--;
        }

        if (i < 0)
            return "no answer";

        int j = letters.Length - 1;
        while (letters[j] <= letters[i])
        {
            j--;
        }

        char temp = letters[i];
        letters[i] = letters[j];
        letters[j] = temp;

        Array.Reverse(letters, i + 1, letters.Length - i - 1);

        return new string(letters);
    }

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int T = Convert.ToInt32(Console.ReadLine().Trim());

        for (int TItr = 0; TItr < T; TItr++)
        {
            string w = Console.ReadLine();

            string result = Result.biggerIsGreater(w);

            textWriter.WriteLine(result);
        }

        textWriter.Flush();
        textWriter.Close();
    }
}
