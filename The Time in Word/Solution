using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'timeInWords' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. INTEGER h
     *  2. INTEGER m
     */

    public static string timeInWords(int h, int m)
    {
        string NumberToWord(int n)
        {
            string[] ones = { "", "one", "two", "three", "four", "five", "six",     "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen" };
            string[] tens = { "", "", "twenty" };

            if (n < 20)
                return ones[n];
            else
            {
                int t = n / 10;
                int o = n % 10;
                return tens[t] + (o > 0 ? " " + ones[o] : "");
            }
        }

        if (m == 0)
            return NumberToWord(h) + " o' clock";
        else if (m == 15)
            return "quarter past " + NumberToWord(h);
        else if (m == 30)
            return "half past " + NumberToWord(h);
        else if (m == 45)
            return "quarter to " + NumberToWord((h % 12) + 1);

        if (m < 30)
        {
            string minuteText = (m == 1) ? " minute" : " minutes";
            return NumberToWord(m) + minuteText + " past " + NumberToWord(h);
        }   
        else
        {
            int minutesToNextHour = 60 - m;
            string minuteText = (minutesToNextHour == 1) ? " minute" : " minutes";
            int nextHour = (h % 12) + 1;
            return NumberToWord(minutesToNextHour) + minuteText + " to " + NumberToWord(nextHour);
        }
    }
}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int h = Convert.ToInt32(Console.ReadLine().Trim());

        int m = Convert.ToInt32(Console.ReadLine().Trim());

        string result = Result.timeInWords(h, m);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
